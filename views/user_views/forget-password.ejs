<%- include("../partials/user-header")%>
<main class="main">
    <header>
        <div class="header-bottom header-bottom-bg-color  mt-20">
            <div class="container">
                <div class="header-wrap header-space-between position-relative">
                    <!-- Logo for large screens -->
                    <div class="logo d-none d-lg-block">
                        <a href="/"><img src="userAssets/imgs/theme/logo.svg" alt="logo" style="width: 150px;"></a>
                        <!-- Adjust the width as needed -->
                    </div>

                    <div class="header-nav d-none d-lg-flex justify-content-end align-items-center">
                        <!-- Your existing navigation code -->
                    </div>
                </div>
            </div> 
        </div>
    </header>
        <section class="pt-85 pb-150">
            <div class="container">
                <div class="row">
                    <div class="col-lg-10 m-auto">
                        <div class="row  d-flex align-items-center justify-content-center">
                            <div class="col-lg-5">
                                <div class="login_wrap widget-taber-content p-30 background-white border-radius-10 mb-md-5 mb-lg-0 mb-sm-5">
                                    <div class="padding_eight_all bg-white">
                                        <div class="heading_s1">
                                            <%if (typeof subreddit !== 'undefined') {%>
                                                <p class="text-center" style="color:red;"><%= subreddit %></p>
                                            <%}%>
                                            <h3 class="mb-30">Reset Password</h3>
                                        </div>
                                        <form method="post" action="/post-forgetpassword" id="forgetpasswordform" onsubmit="return validateForm()">
                                            <div class="form-group">
                                                <input type="text" required="" name="email" placeholder="Your Email" id="email">
                                                <div id="emailError" class="error-message"></div>
                                            </div>
                                            <div class="form-group">
                                                <input required="" type="password" name="password" placeholder=" New Password" id="password">
                                                <div id="passwordError" class="error-message"></div>
                                            </div>
                                            <div class="form-group">
                                                <input required="" type="password" name="confirmpassword" placeholder="Confirm password" id="confirmpassword">
                                                <div id="confirmpasswordError" class="error-message"></div>
                                            </div>
                                            <div class="form-group">
                                                <button type="button" class="btn btn-sm btn-fill-out btn-block hover-up" id="sendOTPButton" name="sendOTPBtn" >Send OTP</button>
                                            </div>
                                            <div class="form-group">
                                                <button class="btn btn-sm btn-fill-out btn-block hover-up" type="button" id="resendOTPButton" style="display: none;">Resend OTP</button>
                                            </div>
                                            <div class="form-group">
                                                <div id="timer" class="mb-3" style="display: none; color: rgb(0, 0, 0);"></div>
                                            </div>
                                            <div class="form-group">
                                                <input type="text" required="" name="otpInput" placeholder="Enter OTP" id="otpInput">
                                            </div>
                                            <div class="form-group">
                                                <button type="submit" class="btn btn-fill-out btn-block hover-up" name="reset" id="resetButton">Reset Password</button>
                                            </div>    
                                                                                    
                                            <%if (typeof message !== 'undefined') {%>
                                                <p class="text-center" style="color:rgb(20, 159, 36);"><%= message %></p>
                                            <%}%>
                                        </form>
                                    </div>
                                </div>
                            </div>

                    </div>
                </div>
            </div>
        </section>
    </main>
<script>
    let countdown;
    const timerElement = document.getElementById('timer');
   const sendOTPbtn = document.getElementById("sendOTPButton");
   const resendOTPButton = document.getElementById("resendOTPButton");
   const resetButton = document.getElementById("resetButton");
   resetButton.disabled = true;
        sendOTPbtn.addEventListener("click", function (e) {
            e.preventDefault();

        if (sendOTP()) {
            // Get form values
            const email = document.querySelector('input[name="email"]').value;
            const password = document.querySelector('input[name="password"]').value;
            const confirmpassword = document.querySelector('input[name="confirmpassword"]').value;
            const otpInput = document.querySelector('input[name="otpInput"]').value;

    
            // Perform client-side validation if needed
    
            // Send a request to your server
            fetch("/post-sentotp", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ email, password ,confirmpassword,otpInput})
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                // Handle the response from the server
                if (data.error) {
                    // Display error using Swal
                    Swal.fire({
                        position: 'top-center',
                        icon: 'error',
                        title: data.error,
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    // If successful, you can redirect or perform other actions
                    Swal.fire({
                        position: 'top-center',
                        icon: 'success',
                        title: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    
                    resetButton.disabled = false
                    startResendTimer();  

                }
            })
            .catch(error => {
                console.error("Error:", error);
                // Handle other errors if needed
            });
        }
        });
        resendOTPButton.addEventListener("click", function (e) {
            e.preventDefault();

        if (sendOTP()) {
            // Get form values
            const email = document.querySelector('input[name="email"]').value;
            const password = document.querySelector('input[name="password"]').value;
            const confirmpassword = document.querySelector('input[name="confirmpassword"]').value;
            const otpInput = document.querySelector('input[name="otpInput"]').value;

    
            // Perform client-side validation if needed
    
            // Send a request to your server
            fetch("/post-sentotp", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ email, password ,confirmpassword,otpInput})
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then((data) => {
                // Handle the response from the server
                if (data.error) {
                    // Display error using Swal
                    Swal.fire({
                        position: 'top-center',
                        icon: 'error',
                        title: data.error,
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    // If successful, you can redirect or perform other actions
                    Swal.fire({
                        position: 'top-center',
                        icon: 'success',
                        title: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    
                }
                resetButton.disabled = false
            })
            .catch(error => {
                console.error("Error:", error);
                // Handle other errors if needed
            });
            startResendTimer();  
        }
        });
        function startResendTimer(){
            let remainingTime = 25;
            timerElement.style.display = 'block';
            resendOTPButton.style.display = 'none';
            sendOTPButton.style.display = 'none';

            countdown = setInterval(()=>{
                timerElement.textContent = `OTP expiring in ${remainingTime} seconds`;
                remainingTime--;

                if(remainingTime<0){
                    
            timerElement.style.display = 'none';
            resendOTPButton.style.display = 'block';
            sendOTPButton.style.display = 'none';
            clearInterval(countdown);
            }
            

            }, 1000);

        }
        
        function sendOTP() {
            // Reset previous error messages
            resetErrorMessages();

const email = document.getElementById('email').value;
const password = document.getElementById('password').value;
const confirmPassword = document.getElementById('confirmpassword').value;


// Validate email
const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
if (!email.match(emailPattern)) {
    showError('emailError', 'Invalid email address');
}

// Validate password length
if (password.length < 6) {
    showError('passwordError', 'Password must be at least 6 characters');
}

// Validate password strength (custom function)
if (!isStrongPassword(password)) {
    showError('passwordError', 'Password should be strong (at least 8 characters, including uppercase, lowercase, digits, and special characters)');
}

// Validate password confirmation
if (password !== confirmPassword) {
    showError('confirmpasswordError', 'Passwords do not match');
}

// Validate OTP input (you can add specific criteria if needed)


// Check if there are any errors
const errorElements = document.querySelectorAll('.error-message');
for (const element of errorElements) {
    if (element.textContent !== '') {
        return false; // There are errors, prevent form submission
    }
}

return true; // No errors, proceed with form submission
}

// Function to check if a password is strong
function isStrongPassword(password) {
// Use your own criteria for password strength
const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
return passwordPattern.test(password);
}


        // Function to show error message
        function showError(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.textContent = message;
            errorElement.style.color = 'red'; 
        }

        // Function to reset error messages
        function resetErrorMessages() {
            const errorElements = document.querySelectorAll('.error-message');
            errorElements.forEach((element) => {
                element.textContent = '';
            });
        }

        // function validateForm() {
        //     resetErrorMessages();
        //     const otpInput= document.getElementById('otpInput').value;

        //     return true; 
        // }
        resetButton.addEventListener("click", function (e) {
            e.preventDefault();
                     
        
            const password = document.querySelector('input[name="password"]').value;
            const otpInput = document.querySelector('input[name="otpInput"]').value;
            fetch("/post-forgetpassword", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ otpInput,password})
            })
            .then(response => {     
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                // Handle the response from the server
                if (data.error) {
                    // Display error using Swal
                    Swal.fire({
                        position: 'top-center',
                        icon: 'error',
                        title: data.error,
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    // If successful, you can redirect or perform other actions
                    Swal.fire({
                        position: 'top-center',
                        icon: 'success',
                        title: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    window.location.href = '/login'
                }
            })
            .catch(error => {
                console.error("Error:", error);
                // Handle other errors if needed
            });
        
        });        


</script>

    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
  
    <script src="/userAssets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="/userAssets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="/userAssets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="/userAssets/js/vendor/bootstrap.bundle.min.js"></script>
    <script src="/userAssets/js/plugins/slick.js"></script>
    <script src="/userAssets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="/userAssets/js/plugins/wow.js"></script>
    <script src="/userAssets/js/plugins/jquery-ui.js"></script>
    <script src="/userAssets/js/plugins/perfect-scrollbar.js"></script>
    <script src="/userAssets/js/plugins/magnific-popup.js"></script>
    <script src="/userAssets/js/plugins/select2.min.js"></script>
    <script src="/userAssets/js/plugins/waypoints.js"></script>
    <script src="/userAssets/js/plugins/counterup.js"></script>
    <script src="/userAssets/js/plugins/jquery.countdown.min.js"></script>
    <script src="/userAssets/js/plugins/images-loaded.js"></script>
    <script src="/userAssets/js/plugins/isotope.js"></script>
    <script src="/userAssets/js/plugins/scrollup.js"></script> 
    <script src="/userAssets/js/plugins/jquery.vticker-min.js"></script>
    <script src="/userAssets/js/plugins/jquery.theia.sticky.js"></script>
    <!-- Template  JS -->
    <script src="/userAssets/js/maind134.js?v=3.4"></script>

    <%- include("../partials/user-footer")%>